import{_ as a,o as i,c as p,a as t}from"./app-EJARjf-Z.js";const r={};function o(l,e){return i(),p("div",null,e[0]||(e[0]=[t('<blockquote><p><a href="http://www.jianshu.com/p/b7a646a6c80e" target="_blank" rel="noopener noreferrer">参考地址</a><br> ijkplayer 是一款做视频直播的框架，基于 FFmpeg，支持 Android 和 iOS。这里介绍一下 iOS 中集成 ijkplayer</p></blockquote><h2 id="一、ffmpeg" tabindex="-1"><a class="header-anchor" href="#一、ffmpeg"><span>一、FFmpeg</span></a></h2><p>FFmpeg 是一套可以用来记录、转换数字音频、视频，并能将其转化为流的开源计算机程序。它包括了领先的音/视频编码库 libavcodec 等。</p><p><strong>libavformat</strong>：用于各种音视频封装格式的生成和解析，包括获取解码所需信息以生成解码上下文结构<br> 和读取音视频帧等功能；</p><p><strong>libavcodec</strong>：用于各种类型声音/图像编解码；</p><p><strong>libavutil</strong>：包含一些公共的工具函数；</p><p><strong>libswscale</strong>：用于视频场景比例缩放、色彩映射转换；</p><p><strong>libpostproc</strong>：用于后期效果处理；</p><p><strong>ffmpeg</strong>：该项目提供的一个工具，可用于格式转换、解码或电视卡即时编码等；</p><p><strong>ffsever</strong>：一个 HTTP 多媒体即时广播串流服务器；</p><p><strong>ffplay</strong>：是一个简单的播放器，使用 ffmpeg 库解析和解码，通过 SDL 显示；</p><h3 id="支持的编码" tabindex="-1"><a class="header-anchor" href="#支持的编码"><span>支持的编码</span></a></h3><p>源自 FFmpeg 项目组的两个视频编码：</p><p>Snow</p><p>FFV1</p><h3 id="支持的格式" tabindex="-1"><a class="header-anchor" href="#支持的格式"><span>支持的格式</span></a></h3><p>ASF</p><p>AVI</p><p>BFI[7]</p><p>IFF[8]</p><p>RL2[9]</p><p>FLV</p><p>MXF, Material eXchange Format, SMPTE 377M</p><p>Matroska</p><p>Maxis XA[10]</p><p>MSN Webcam stream[11]</p><p>MPEG transport stream</p><p>TXD[6]</p><p>OMA[12]</p><p>GXF, General eXchange Format, SMPTE 360M</p><p>mov,mp4,m4a,3gp,</p><h3 id="支持的协议" tabindex="-1"><a class="header-anchor" href="#支持的协议"><span>支持的协议</span></a></h3><p>HTTP</p><p>RTP</p><p>RTSP</p><p>RealMedia RTSP/RDT</p><p>TCP</p><p>UDP</p><p>Gopher</p><p>RTMP</p><p>RTMPT, RTMPE, RTMPTE, RTMPS (via librtmp)</p><p>SDP</p><p>MMS over TCP</p><h2 id="二、下载-ijkplayer" tabindex="-1"><a class="header-anchor" href="#二、下载-ijkplayer"><span>二、下载 ijkplayer</span></a></h2><p>ijkplayer 下载地址:<a href="https://github.com/Bilibili/ijkplayer" target="_blank" rel="noopener noreferrer">https://github.com/Bilibili/ijkplayer</a></p><p>下载完成后解压, 解压后文件夹内部目录如下图:<br><img src="https://storage2.cuntuku.com/2017/08/31/ijkplayer.png" alt="ijkplayer.png" loading="lazy"></p><h2 id="三、编译" tabindex="-1"><a class="header-anchor" href="#三、编译"><span>三、编译</span></a></h2><p>其实这里主要是编译 FFmpeg，因为他是一个 C 语言的跨平台库，需要 sh 脚本来进行编译</p><ol><li>打开终端, cd 到 jkplayer-master 文件夹中, 也就是下载完解压后的文件夹, 如下图:<img src="https://storage1.cuntuku.com/2017/08/31/1.png" alt="1.png" loading="lazy"></li><li>执行命令行**./init-ios.sh**, 这一步是去下载 ffmpeg 的, 时间会久一点, 耐心等一下.如下图:<img src="https://storage2.cuntuku.com/2017/08/31/2.png" alt="2.png" loading="lazy"></li><li>cd 到 ios 目录中</li><li>执行**./compile-ffmpeg.sh clean**<img src="https://storage1.cuntuku.com/2017/08/31/3.png" alt="3.png" loading="lazy"></li><li>执行**./compile-ffmpeg.sh all**进行 FFmpeg 的编译，时间较久<img src="https://storage2.cuntuku.com/2017/08/31/4.png" alt="4.png" loading="lazy"></li></ol><h2 id="四、打包-ijkmediaframework-framework-框架" tabindex="-1"><a class="header-anchor" href="#四、打包-ijkmediaframework-framework-框架"><span>四、打包 IJKMediaFramework.framework 框架</span></a></h2><p>其实集成 ijkplayer 有两种方法，一种是按照 Demo 中的导入 IJKMediaPlayer.xcodeproj，此方法不是很推荐</p><p>下面主要说另一种把 ijkplayer 打包成 framework 导入工程中使用.<br> 首先打开工程 IJKMediaPlayer.xcodeproj,<img src="http://upload-images.jianshu.io/upload_images/1803339-607cc84c212faf90.png?imageMogr2/auto-orient/strip|imageView2/2/w/1240" alt="IJKMediaPlayer.xcodeproj" loading="lazy"></p><p>选择 IJKMediaFramework 点击 EditScheme<img src="http://upload-images.jianshu.io/upload_images/1803339-bbc0adc479cebb69.png?imageMogr2/auto-orient/strip|imageView2/2/w/1240" alt="" loading="lazy"></p><p>选择 release<img src="http://upload-images.jianshu.io/upload_images/1803339-daa4498f7e0746d0.png?imageMogr2/auto-orient/strip|imageView2/2/w/1240" alt="" loading="lazy"></p><p>设置好 scheme 后, 分别选择真机和模拟器进行编译, 编译完成后, 进入 Finder,<img src="http://upload-images.jianshu.io/upload_images/1803339-344cda905745ff39.png?imageMogr2/auto-orient/strip|imageView2/2/w/1240" alt="" loading="lazy"></p><p>下面开始合并真机和模拟器版本的 framework, 注意不要合并错了, 合并的是这个文件, 如下图:<img src="http://upload-images.jianshu.io/upload_images/1803339-ec00ef4cb15c66d1.png?imageMogr2/auto-orient/strip|imageView2/2/w/1240" alt="" loading="lazy"></p><p>打开终端, 进行合并, 命令行具体格式为:<br> lipo -create 真机版本路径 模拟器版本路径 -output 合并后的文件路径</p><p>合并后如下图<img src="http://upload-images.jianshu.io/upload_images/1803339-d025e12bf804ee05.png?imageMogr2/auto-orient/strip|imageView2/2/w/1240" alt="" loading="lazy"></p><p>用合并后的 IJKMediaFramework 把原来的 IJKMediaFramework 替换掉<img src="http://upload-images.jianshu.io/upload_images/1803339-8d228ab56eb77f43.png?imageMogr2/auto-orient/strip|imageView2/2/w/1240" alt="" loading="lazy"></p><h2 id="五、在-ios-项目中集成-ijkplayer" tabindex="-1"><a class="header-anchor" href="#五、在-ios-项目中集成-ijkplayer"><span>五、在 iOS 项目中集成 ijkplayer</span></a></h2><p>新建工程, 导入合并后的 IJKMediaFramework.framework 以及相关依赖框架以及相关依赖框架,如下图:<br><img src="https://storage1.cuntuku.com/2017/08/31/5.png" alt="5.png" loading="lazy"></p><p>导入框架后在 ViewController.m 中进行 buid，如果成功，说明集成成功。然后可以在控制器中写一个 Demo 测试<img src="https://storage1.cuntuku.com/2017/08/31/Snip20170831_10.png" alt="Snip20170831_10.png" loading="lazy"><br> 可以是 mp4 格式，也可以是 m3u8,rtmp,hls 等流媒体</p><blockquote><p><a href="https://github.com/OrageKK/ijkPlayerDemo" target="_blank" rel="noopener noreferrer">demo 地址</a></p></blockquote>',63)]))}const g=a(r,[["render",o],["__file","ijkplayer.html.vue"]]),s=JSON.parse(`{"path":"/posts/iOS/tool/ijkplayer.html","title":"ijkPlayer 集成","lang":"zh-CN","frontmatter":{"title":"ijkPlayer 集成","date":"2017-08-30T00:00:00.000Z","category":["iOS"],"tag":["iOS"],"description":"参考地址 ijkplayer 是一款做视频直播的框架，基于 FFmpeg，支持 Android 和 iOS。这里介绍一下 iOS 中集成 ijkplayer 一、FFmpeg FFmpeg 是一套可以用来记录、转换数字音频、视频，并能将其转化为流的开源计算机程序。它包括了领先的音/视频编码库 libavcodec 等。 libavformat：用于各种...","head":[["meta",{"property":"og:url","content":"https://oragekk.me/posts/iOS/tool/ijkplayer.html"}],["meta",{"property":"og:site_name","content":"Oragekk's Blog"}],["meta",{"property":"og:title","content":"ijkPlayer 集成"}],["meta",{"property":"og:description","content":"参考地址 ijkplayer 是一款做视频直播的框架，基于 FFmpeg，支持 Android 和 iOS。这里介绍一下 iOS 中集成 ijkplayer 一、FFmpeg FFmpeg 是一套可以用来记录、转换数字音频、视频，并能将其转化为流的开源计算机程序。它包括了领先的音/视频编码库 libavcodec 等。 libavformat：用于各种..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://storage2.cuntuku.com/2017/08/31/ijkplayer.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-24T03:18:03.000Z"}],["meta",{"property":"article:author","content":"Oragekk"}],["meta",{"property":"article:tag","content":"iOS"}],["meta",{"property":"article:published_time","content":"2017-08-30T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-24T03:18:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ijkPlayer 集成\\",\\"image\\":[\\"https://storage2.cuntuku.com/2017/08/31/ijkplayer.png\\",\\"https://storage1.cuntuku.com/2017/08/31/1.png\\",\\"https://storage2.cuntuku.com/2017/08/31/2.png\\",\\"https://storage1.cuntuku.com/2017/08/31/3.png\\",\\"https://storage2.cuntuku.com/2017/08/31/4.png\\",\\"http://upload-images.jianshu.io/upload_images/1803339-607cc84c212faf90.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\\",\\"http://upload-images.jianshu.io/upload_images/1803339-bbc0adc479cebb69.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\\",\\"http://upload-images.jianshu.io/upload_images/1803339-daa4498f7e0746d0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\\",\\"http://upload-images.jianshu.io/upload_images/1803339-344cda905745ff39.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\\",\\"http://upload-images.jianshu.io/upload_images/1803339-ec00ef4cb15c66d1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\\",\\"http://upload-images.jianshu.io/upload_images/1803339-d025e12bf804ee05.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\\",\\"http://upload-images.jianshu.io/upload_images/1803339-8d228ab56eb77f43.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\\",\\"https://storage1.cuntuku.com/2017/08/31/5.png\\",\\"https://storage1.cuntuku.com/2017/08/31/Snip20170831_10.png\\"],\\"datePublished\\":\\"2017-08-30T00:00:00.000Z\\",\\"dateModified\\":\\"2023-03-24T03:18:03.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Oragekk\\",\\"url\\":\\"https://orgaekk.me\\"}]}"]]},"headers":[{"level":2,"title":"一、FFmpeg","slug":"一、ffmpeg","link":"#一、ffmpeg","children":[{"level":3,"title":"支持的编码","slug":"支持的编码","link":"#支持的编码","children":[]},{"level":3,"title":"支持的格式","slug":"支持的格式","link":"#支持的格式","children":[]},{"level":3,"title":"支持的协议","slug":"支持的协议","link":"#支持的协议","children":[]}]},{"level":2,"title":"二、下载 ijkplayer","slug":"二、下载-ijkplayer","link":"#二、下载-ijkplayer","children":[]},{"level":2,"title":"三、编译","slug":"三、编译","link":"#三、编译","children":[]},{"level":2,"title":"四、打包 IJKMediaFramework.framework 框架","slug":"四、打包-ijkmediaframework-framework-框架","link":"#四、打包-ijkmediaframework-framework-框架","children":[]},{"level":2,"title":"五、在 iOS 项目中集成 ijkplayer","slug":"五、在-ios-项目中集成-ijkplayer","link":"#五、在-ios-项目中集成-ijkplayer","children":[]}],"git":{"createdTime":1678187456000,"updatedTime":1679627883000,"contributors":[{"name":"huangkun","email":"huangkun@tonshow.cn","commits":1},{"name":"oragekk","email":"oragekk@163.com","commits":1}]},"readingTime":{"minutes":2.94,"words":883},"filePathRelative":"posts/iOS/tool/ijkplayer.md","localizedDate":"2017年8月30日","excerpt":"<blockquote>\\n<p><a href=\\"http://www.jianshu.com/p/b7a646a6c80e\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">参考地址</a><br>\\nijkplayer 是一款做视频直播的框架，基于 FFmpeg，支持 Android 和 iOS。这里介绍一下 iOS 中集成 ijkplayer</p>\\n</blockquote>\\n<h2>一、FFmpeg</h2>\\n<p>FFmpeg 是一套可以用来记录、转换数字音频、视频，并能将其转化为流的开源计算机程序。它包括了领先的音/视频编码库 libavcodec 等。</p>","autoDesc":true}`);export{g as comp,s as data};
