import{_ as l,r as e,o as p,c as r,b as a,d as n,e as o,w as t,a as B}from"./app-CzrUEAVx.js";const k={};function c(d,s){const i=e("RouteLink");return p(),r("div",null,[a("blockquote",null,[a("p",null,[s[1]||(s[1]=n("接上篇 ")),o(i,{to:"/posts/ReactNative/react1.html"},{default:t(()=>s[0]||(s[0]=[n("ReactNative介绍")])),_:1})])]),s[2]||(s[2]=B(`<h2 id="创建-reactnative-项目" tabindex="-1"><a class="header-anchor" href="#创建-reactnative-项目"><span>创建 ReactNative 项目</span></a></h2><h4 id="环境配置" tabindex="-1"><a class="header-anchor" href="#环境配置"><span>环境配置</span></a></h4><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">yarn</span><span style="color:#98C379;--shiki-dark:#98C379;"> add</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> --dev</span><span style="color:#98C379;--shiki-dark:#98C379;"> typescript</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">yarn</span><span style="color:#98C379;--shiki-dark:#98C379;"> add</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> --dev</span><span style="color:#98C379;--shiki-dark:#98C379;"> react-native-typescript-transformer</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">yarn</span><span style="color:#98C379;--shiki-dark:#98C379;"> tsc</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> --init</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> --pretty</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> --jsx</span><span style="color:#98C379;--shiki-dark:#98C379;"> react-native</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">touch</span><span style="color:#98C379;--shiki-dark:#98C379;"> rn-cli.config.js</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">yarn</span><span style="color:#98C379;--shiki-dark:#98C379;"> add</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> --dev</span><span style="color:#98C379;--shiki-dark:#98C379;"> @types/react</span><span style="color:#98C379;--shiki-dark:#98C379;"> @types/react-native</span></span></code></pre></div><h4 id="配置-rn-cli-config-js" tabindex="-1"><a class="header-anchor" href="#配置-rn-cli-config-js"><span>配置 rn-cli.config.js</span></a></h4><div class="language-js" data-ext="js" data-title="js"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">module</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">exports</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">  getTransformModulePath</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    return</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> require</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">resolve</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;react-native-typescript-transformer&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  },</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">  getSourceExts</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    return</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;ts&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;tsx&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">];</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">};</span></span></code></pre></div><h4 id="create-our-new-project" tabindex="-1"><a class="header-anchor" href="#create-our-new-project"><span>Create our new project</span></a></h4><p><code>react-native init AwesomeProject</code></p><p><code>cd AwesomeProject react-native run-ios</code></p><h4 id="项目结构图" tabindex="-1"><a class="header-anchor" href="#项目结构图"><span>项目结构图</span></a></h4><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">my-app/</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">├─</span><span style="color:#98C379;--shiki-dark:#98C379;"> .gitignore</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">├─</span><span style="color:#98C379;--shiki-dark:#98C379;"> images.d.ts</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">├─</span><span style="color:#98C379;--shiki-dark:#98C379;"> node_modules/</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">├─</span><span style="color:#98C379;--shiki-dark:#98C379;"> public/</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">├─</span><span style="color:#98C379;--shiki-dark:#98C379;"> src/</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">│</span><span style="color:#98C379;--shiki-dark:#98C379;">  └─</span><span style="color:#98C379;--shiki-dark:#98C379;"> ...</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">├─</span><span style="color:#98C379;--shiki-dark:#98C379;"> package.json</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">├─</span><span style="color:#98C379;--shiki-dark:#98C379;"> tsconfig.json</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">├─</span><span style="color:#98C379;--shiki-dark:#98C379;"> tsconfig.prod.json</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">├─</span><span style="color:#98C379;--shiki-dark:#98C379;"> tsconfig.test.json</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">└─</span><span style="color:#98C379;--shiki-dark:#98C379;"> tslint.json</span></span></code></pre></div><ul><li><code>tsconfig.json</code> 包含我们项目的 TypeScript 特定选项。</li><li><code>package.json</code> 包含我们的依赖项，以及我们想要运行的命令的一些快捷方式，用于测试，预览和部署我们的应用程序。</li><li><code>public</code>包含静态资产，例如我们计划部署到的 HTML 页面或图像。您可以删除此文件夹中的任何文件<code>index.html</code>。</li><li><code>src</code>包含我们的 TypeScript 和 CSS 代码。<code>index.tsx</code>是我们文件的入口点，并且是强制性的。</li><li><code>images.d.ts</code>将告诉 TypeScript 可以使用某些类型的图像文件<code>import</code>，create-react-app 支持这些文件。</li></ul><h4 id="添加-typescript-配置文件" tabindex="-1"><a class="header-anchor" href="#添加-typescript-配置文件"><span>添加 TypeScript 配置文件</span></a></h4><p>我们想将 TypeScript 文件整合到一起 - 这包括我们写的源码和必要的声明文件。</p><p>我们需要创建一个<code>tsconfig.json</code>文件，它包含了输入文件列表以及编译选项。 在工程根目录下新建文件<code>tsconfig.json</code>文件，添加以下内容：</p><div class="language-json" data-ext="json" data-title="json"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">  &quot;compilerOptions&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    &quot;outDir&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;./dist/&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    &quot;sourceMap&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#D19A66;--shiki-dark:#D19A66;">true</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    &quot;noImplicitAny&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#D19A66;--shiki-dark:#D19A66;">true</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    &quot;module&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;commonjs&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    &quot;target&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;es5&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    &quot;jsx&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;react&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  },</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">  &quot;include&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: [</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;./src/**/*&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><p>你可以在<a href="https://www.tslang.cn/docs/handbook/tsconfig-json.html" target="_blank" rel="noopener noreferrer">这里</a>了解更多关于<code>tsconfig.json</code>文件的说明。</p><h4 id="运行" tabindex="-1"><a class="header-anchor" href="#运行"><span>运行</span></a></h4><p><code>npm run start</code></p><p><code>npm run test</code></p><h2 id="组件" tabindex="-1"><a class="header-anchor" href="#组件"><span>组件</span></a></h2><p>示例代码</p><div class="language-typescript" data-ext="typescript" data-title="typescript"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">import</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> React</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, { </span><span style="color:#E06C75;--shiki-dark:#E06C75;">Component</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> } </span><span style="color:#C678DD;--shiki-dark:#C678DD;">from</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;react&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">import</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> { </span><span style="color:#E06C75;--shiki-dark:#E06C75;">Text</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#E06C75;--shiki-dark:#E06C75;">View</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> } </span><span style="color:#C678DD;--shiki-dark:#C678DD;">from</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;react-native&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">export</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> default</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> HelloWorldApp</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> extends</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Component</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">  render</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    return</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2;">      &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">View</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> style</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E06C75;--shiki-dark:#E06C75;">{{ flex: 1, justifyContent: &quot;center&quot;, alignItems: &quot;center&quot; }}</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        &lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Text</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;font-style:italic;--shiki-dark-font-style:italic;">Hello</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#E06C75;--shiki-dark:#E06C75;">world</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">!&lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">Text</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&gt;</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2;">      &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">View</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    );</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><p>示例中的这一行<code>&lt;View&gt;&lt;Text&gt;Hello world!&lt;/Text&gt;&lt;/View&gt;</code>恐怕很多人看起来也觉得陌生。这叫做 JSX——是一种在 JavaScript 中嵌入 XML 结构的语法。很多传统的应用框架会设计自有的模板语法，让你在结构标记中嵌入代码。React 反其道而行之，设计的 JSX 语法却是让你在代码中嵌入结构标记。初看起来，这种写法很像 web 上的 HTML，只不过使用的并不是 web 上常见的标签如<code>&lt;div&gt;</code>或是<code>&lt;span&gt;</code>等，这里我们使用的是 React Native 的组件。上面的示例代码中，使用的是内置的<code>&lt;Text&gt;</code>组件，它专门用来显示文本，而<code>&lt;View&gt;</code>就类似 html 中的<code>div</code>或是<code>span</code>这样的容器。</p><p>上面的代码定义了一个名为<code>HelloWorldApp</code>的新的<code>组件（Component）</code>。你在编写 React Native 应用时，肯定会写出很多新的组件。而一个 App 的最终界面，其实也就是各式各样的组件的组合。组件本身结构可以非常简单——唯一必须的就是在<code>render</code>方法中返回一些用于渲染结构的 JSX 语句。</p><h2 id="props-属性" tabindex="-1"><a class="header-anchor" href="#props-属性"><span>Props（属性）</span></a></h2><p>大多数组件在创建时就可以使用各种参数来进行定制。用于定制的这些参数就称为<code>props</code>（属性）。</p><p>以常见的基础组件<code>Image</code>为例，在创建一个图片时，可以传入一个名为<code>source</code>的 prop 来指定要显示的图片的地址，以及使用名为<code>style</code>的 prop 来控制其尺寸。</p><div class="language-typescript" data-ext="typescript" data-title="typescript"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">import</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> React</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, { </span><span style="color:#E06C75;--shiki-dark:#E06C75;">Component</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> } </span><span style="color:#C678DD;--shiki-dark:#C678DD;">from</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;react&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">import</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> { </span><span style="color:#E06C75;--shiki-dark:#E06C75;">Image</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> } </span><span style="color:#C678DD;--shiki-dark:#C678DD;">from</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;react-native&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">export</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> default</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Bananas</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> extends</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Component</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">  render</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    let</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> pic</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">      uri</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;https://upload.wikimedia.org/wikipedia/commons/d/de/Bananavarieties.jpg&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    };</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    return</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> &lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">Image</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> source</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">={</span><span style="color:#E06C75;--shiki-dark:#E06C75;">pic</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">} </span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">style</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">{{ width: 193, height: 110 }}</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> /&gt;;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><p>请注意<code>{pic}</code>外围有一层括号，我们需要用括号来把<code>pic</code>这个变量嵌入到 JSX 语句中。括号的意思是括号内部为一个 js 变量或表达式，需要执行后取值。因此我们可以把任意合法的 JavaScript 表达式通过括号嵌入到 JSX 语句中。</p><p>使用的时候像这样<code>this.props</code>，请注意一点，在自定义组件内部，由外部传入的 props 的属性均为**readonly（只读）**不可在组件内部修改</p><h2 id="es6-props-使用解构赋值" tabindex="-1"><a class="header-anchor" href="#es6-props-使用解构赋值"><span>ES6 props 使用解构赋值</span></a></h2><p>组件内部赋值是这样的</p><div class="language-typescript line-numbers-mode" data-ext="typescript" data-title="typescript"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">render</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        return</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2;">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">View</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> style</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{style.</span><span style="color:#E06C75;--shiki-dark:#E06C75;">ri_item</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&gt;</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2;">                &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">View</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> style</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{style.</span><span style="color:#E06C75;--shiki-dark:#E06C75;">ri_line</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;/</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">View</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">                {</span><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">/* 中间部分 */</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2;">                &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">View</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> style</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{style.</span><span style="color:#E06C75;--shiki-dark:#E06C75;">ri_item_center</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&gt;</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2;">                    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;font-style:italic;--shiki-dark-font-style:italic;">BidderView</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">                        bidderHeadImg</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{this.props.data.</span><span style="color:#E06C75;--shiki-dark:#E06C75;">bidderHeadImg</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">                        bidderName</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{this.props.data.</span><span style="color:#E06C75;--shiki-dark:#E06C75;">bidderName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">                        targetName</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{this.props.data.</span><span style="color:#E06C75;--shiki-dark:#E06C75;">targetName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2;">                    /&gt;</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2;">                &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">View</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">                {</span><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">/* 尾部按钮 */</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2;">                &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">View</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> style</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E06C75;--shiki-dark:#E06C75;">{{ flexDirection: &quot;row&quot;, flex: 1, backgroundColor: &quot;white&quot;, justifyContent: &#39;center&#39;, }}</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">                    {</span><span style="color:#E06C75;--shiki-dark:#E06C75;font-style:italic;--shiki-dark-font-style:italic;">this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E06C75;--shiki-dark:#E06C75;font-style:italic;--shiki-dark-font-style:italic;">recordOpinionButton</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">()}</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">                    {</span><span style="color:#E06C75;--shiki-dark:#E06C75;font-style:italic;--shiki-dark-font-style:italic;">this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E06C75;--shiki-dark:#E06C75;font-style:italic;--shiki-dark-font-style:italic;">recordButton</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">()}</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2;">                &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">View</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&gt;</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2;">            &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">View</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        );</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>而使用解构赋值之后是这样的</p><div class="language-typescript line-numbers-mode" data-ext="typescript" data-title="typescript"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">render</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        const</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">bidderHeadImg</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">bidderName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">targetName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">props</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E06C75;--shiki-dark:#E06C75;">data</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">        return</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> (</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2;">            &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">View</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> style</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{style.</span><span style="color:#E06C75;--shiki-dark:#E06C75;">ri_item</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&gt;</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2;">                &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">View</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> style</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{style.</span><span style="color:#E06C75;--shiki-dark:#E06C75;">ri_line</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&gt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;/</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">View</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">                {</span><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">/* 中间部分 */</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2;">                &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">View</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> style</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{style.</span><span style="color:#E06C75;--shiki-dark:#E06C75;">ri_item_center</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&gt;</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2;">                    &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;font-style:italic;--shiki-dark-font-style:italic;">BidderView</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">                        bidderHeadImg</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{</span><span style="color:#E06C75;--shiki-dark:#E06C75;">bidderHeadImg</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">                        bidderName</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{</span><span style="color:#E06C75;--shiki-dark:#E06C75;">bidderName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">                        targetName</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">{</span><span style="color:#E06C75;--shiki-dark:#E06C75;">targetName</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2;">                    /&gt;</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2;">                &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">View</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">                {</span><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">/* 尾部按钮 */</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2;">                &lt;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">View</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> style</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#E06C75;--shiki-dark:#E06C75;">{{ flexDirection: &quot;row&quot;, flex: 1, backgroundColor: &quot;white&quot;, justifyContent: &#39;center&#39;, }}</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">                    {</span><span style="color:#E06C75;--shiki-dark:#E06C75;font-style:italic;--shiki-dark-font-style:italic;">this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E06C75;--shiki-dark:#E06C75;font-style:italic;--shiki-dark-font-style:italic;">recordOpinionButton</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">()}</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">                    {</span><span style="color:#E06C75;--shiki-dark:#E06C75;font-style:italic;--shiki-dark-font-style:italic;">this</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E06C75;--shiki-dark:#E06C75;font-style:italic;--shiki-dark-font-style:italic;">recordButton</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">()}</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2;">                &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">View</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&gt;</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2;">            &lt;/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">View</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">        );</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    }</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="es6-延展操作符" tabindex="-1"><a class="header-anchor" href="#es6-延展操作符"><span>ES6 延展操作符（...）</span></a></h2><h4 id="该运算符主要用于函数调用" tabindex="-1"><a class="header-anchor" href="#该运算符主要用于函数调用"><span>该运算符主要用于函数调用</span></a></h4><div class="language-javascript" data-ext="javascript" data-title="javascript"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">function</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> push</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E06C75;--shiki-dark:#E06C75;font-style:italic;--shiki-dark-font-style:italic;">array</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, ...</span><span style="color:#E06C75;--shiki-dark:#E06C75;font-style:italic;--shiki-dark-font-style:italic;">items</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;--shiki-dark:#E5C07B;">  array</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">push</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(...</span><span style="color:#E06C75;--shiki-dark:#E06C75;">items</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">function</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> add</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="color:#E06C75;--shiki-dark:#E06C75;font-style:italic;--shiki-dark-font-style:italic;">x</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#E06C75;--shiki-dark:#E06C75;font-style:italic;--shiki-dark-font-style:italic;">y</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">  return</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> x</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> +</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> y</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">const</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> numbers</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [</span><span style="color:#D19A66;--shiki-dark:#D19A66;">4</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#D19A66;--shiki-dark:#D19A66;">38</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">];</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">add</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">(...</span><span style="color:#E06C75;--shiki-dark:#E06C75;">numbers</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">); </span><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// 42</span></span></code></pre></div><h4 id="对象的扩展运算" tabindex="-1"><a class="header-anchor" href="#对象的扩展运算"><span>对象的扩展运算</span></a></h4><ul><li><strong>拷贝对象</strong></li></ul><p>对象的扩展运算符（...）用于取出参数对象的所有可遍历属性，拷贝到当前对象之中。</p><div class="language-javascript" data-ext="javascript" data-title="javascript"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">let</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> z</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> { </span><span style="color:#E06C75;--shiki-dark:#E06C75;">a</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#D19A66;--shiki-dark:#D19A66;">3</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#E06C75;--shiki-dark:#E06C75;">b</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#D19A66;--shiki-dark:#D19A66;">4</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> };</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">let</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> n</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> { ...</span><span style="color:#E06C75;--shiki-dark:#E06C75;">z</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> };</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">n</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">; </span><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// { a: 3, b: 4 }</span></span></code></pre></div><ul><li><strong>合并对象</strong></li></ul><p>扩展运算符可以用于合并两个对象。</p><div class="language-javascript" data-ext="javascript" data-title="javascript"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">let</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> ab</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> { ...</span><span style="color:#E06C75;--shiki-dark:#E06C75;">a</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, ...</span><span style="color:#E06C75;--shiki-dark:#E06C75;">b</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> };</span></span>
<span class="line"><span style="color:#7F848E;--shiki-dark:#7F848E;font-style:italic;--shiki-dark-font-style:italic;">// 等同于</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">let</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> ab</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Object</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">assign</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">({}, </span><span style="color:#E06C75;--shiki-dark:#E06C75;">a</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="color:#E06C75;--shiki-dark:#E06C75;">b</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span></code></pre></div><h4 id="用于-props-要求参数名一致-此处用法其实是对-copy-对象的一种应用" tabindex="-1"><a class="header-anchor" href="#用于-props-要求参数名一致-此处用法其实是对-copy-对象的一种应用"><span>用于 props，要求参数名一致，此处用法其实是对 copy 对象的一种应用</span></a></h4><div class="language-typescript" data-ext="typescript" data-title="typescript"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">import</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> React</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">, { </span><span style="color:#E06C75;--shiki-dark:#E06C75;">Component</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> } </span><span style="color:#C678DD;--shiki-dark:#C678DD;">from</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;react&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">import</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> { </span><span style="color:#E06C75;--shiki-dark:#E06C75;">Image</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> } </span><span style="color:#C678DD;--shiki-dark:#C678DD;">from</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;react-native&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">export</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> default</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> class</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Bananas</span><span style="color:#C678DD;--shiki-dark:#C678DD;"> extends</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> Component</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">  render</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    let</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> parameter</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">      uri</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;https://upload.wikimedia.org/wikipedia/commons/d/de/Bananavarieties.jpg&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">      title</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;HelloWorld&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">      message</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;Nice to meet you&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    };</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    return</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> &lt;</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">ModalAlert</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> {...</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">parameter</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">} /&gt;;</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><hr><p>参考资料：</p><p><a href="https://reactnative.cn/docs/layout-props/#justifycontent" target="_blank" rel="noopener noreferrer">官方文档</a></p><p><a href="https://www.jianshu.com/p/ae0a9ec1f8d6?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=seo_notes&amp;utm_source=recommendation" target="_blank" rel="noopener noreferrer">ES6 延展操作符（...）</a></p><p><a href="https://www.tslang.cn/docs/home.html" target="_blank" rel="noopener noreferrer">typeScriptg 中文文档</a></p><p><a href="https://www.imooc.com/video/14286" target="_blank" rel="noopener noreferrer">ReactNative 入门与进阶</a></p><p><a href="%5Bhttps://docs.nativebase.io%5D(https://docs.nativebase.io/)">https://docs.nativebase.io </a></p>`,54))])}const y=l(k,[["render",c],["__file","react2.html.vue"]]),C=JSON.parse(`{"path":"/posts/cross-platform/ReactNative/react2.html","title":"ReactNative开发环境配置，ES6语法介绍","lang":"zh-CN","frontmatter":{"title":"ReactNative开发环境配置，ES6语法介绍","description":"ReactNative开发环境配置，ES6语法介绍","date":"2019-08-25T00:00:00.000Z","order":2,"category":["前端跨平台"],"tag":["前端","React Native"],"head":[["meta",{"property":"og:url","content":"https://oragekk.me/posts/cross-platform/ReactNative/react2.html"}],["meta",{"property":"og:site_name","content":"Oragekk's Blog"}],["meta",{"property":"og:title","content":"ReactNative开发环境配置，ES6语法介绍"}],["meta",{"property":"og:description","content":"ReactNative开发环境配置，ES6语法介绍"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-13T15:16:38.000Z"}],["meta",{"property":"article:author","content":"Oragekk"}],["meta",{"property":"article:tag","content":"前端"}],["meta",{"property":"article:tag","content":"React Native"}],["meta",{"property":"article:published_time","content":"2019-08-25T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-13T15:16:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ReactNative开发环境配置，ES6语法介绍\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-08-25T00:00:00.000Z\\",\\"dateModified\\":\\"2023-03-13T15:16:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Oragekk\\",\\"url\\":\\"https://orgaekk.me\\"}]}"]]},"headers":[{"level":2,"title":"创建 ReactNative 项目","slug":"创建-reactnative-项目","link":"#创建-reactnative-项目","children":[]},{"level":2,"title":"组件","slug":"组件","link":"#组件","children":[]},{"level":2,"title":"Props（属性）","slug":"props-属性","link":"#props-属性","children":[]},{"level":2,"title":"ES6 props 使用解构赋值","slug":"es6-props-使用解构赋值","link":"#es6-props-使用解构赋值","children":[]},{"level":2,"title":"ES6 延展操作符（...）","slug":"es6-延展操作符","link":"#es6-延展操作符","children":[]}],"git":{"createdTime":1678187456000,"updatedTime":1678720598000,"contributors":[{"name":"huangkun","email":"huangkun@tonshow.cn","commits":1},{"name":"oragekk","email":"oragekk@163.com","commits":1}]},"readingTime":{"minutes":4.64,"words":1392},"filePathRelative":"posts/cross-platform/ReactNative/react2.md","localizedDate":"2019年8月25日","excerpt":"<blockquote>\\n<p>接上篇 <a href=\\"/posts/ReactNative/react1.html\\" target=\\"_blank\\">ReactNative介绍</a></p>\\n</blockquote>\\n<h2>创建 ReactNative 项目</h2>\\n<h4>环境配置</h4>\\n<div class=\\"language-shell\\" data-ext=\\"shell\\" data-title=\\"shell\\"><pre class=\\"shiki shiki-themes one-dark-pro one-dark-pro vp-code\\" style=\\"background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf\\" tabindex=\\"0\\"><code><span class=\\"line\\"><span style=\\"color:#61AFEF;--shiki-dark:#61AFEF\\">yarn</span><span style=\\"color:#98C379;--shiki-dark:#98C379\\"> add</span><span style=\\"color:#D19A66;--shiki-dark:#D19A66\\"> --dev</span><span style=\\"color:#98C379;--shiki-dark:#98C379\\"> typescript</span></span>\\n<span class=\\"line\\"><span style=\\"color:#61AFEF;--shiki-dark:#61AFEF\\">yarn</span><span style=\\"color:#98C379;--shiki-dark:#98C379\\"> add</span><span style=\\"color:#D19A66;--shiki-dark:#D19A66\\"> --dev</span><span style=\\"color:#98C379;--shiki-dark:#98C379\\"> react-native-typescript-transformer</span></span>\\n<span class=\\"line\\"><span style=\\"color:#61AFEF;--shiki-dark:#61AFEF\\">yarn</span><span style=\\"color:#98C379;--shiki-dark:#98C379\\"> tsc</span><span style=\\"color:#D19A66;--shiki-dark:#D19A66\\"> --init</span><span style=\\"color:#D19A66;--shiki-dark:#D19A66\\"> --pretty</span><span style=\\"color:#D19A66;--shiki-dark:#D19A66\\"> --jsx</span><span style=\\"color:#98C379;--shiki-dark:#98C379\\"> react-native</span></span>\\n<span class=\\"line\\"><span style=\\"color:#61AFEF;--shiki-dark:#61AFEF\\">touch</span><span style=\\"color:#98C379;--shiki-dark:#98C379\\"> rn-cli.config.js</span></span>\\n<span class=\\"line\\"><span style=\\"color:#61AFEF;--shiki-dark:#61AFEF\\">yarn</span><span style=\\"color:#98C379;--shiki-dark:#98C379\\"> add</span><span style=\\"color:#D19A66;--shiki-dark:#D19A66\\"> --dev</span><span style=\\"color:#98C379;--shiki-dark:#98C379\\"> @types/react</span><span style=\\"color:#98C379;--shiki-dark:#98C379\\"> @types/react-native</span></span></code></pre>\\n</div>"}`);export{y as comp,C as data};
